version: '3.8'

services:
  bot:
    image: wmantra_bot:latest
    build:
      context: .
      dockerfile: bot/Dockerfile
    ports:
      - "8082:8082"
    environment:
      - LOGGING_FILE_RELATIVE_PATH=./logs/application.log
      - MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_EXCLUDE=*
      - MANAGEMENT_ENDPOINTS_WEB_BASE_PATH=/actuator
      - LOGGING_LEVEL_ROOT=INFO
      - API_KEY=${API_KEY_ENV}
      - API_URL=http://api.weatherapi.com/v1/forecast.json
      - SCREENSHOTTER_URL=http://screenshotter:8084
      - BOT_NAME=WeatherMantraBot
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/postgres?currentSchema=users
      - SPRING_DATASOURCE_USERNAME=${DATABASE_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${DATABASE_PASSWORD}
      - TG_BOT_TOKEN=${TG_BOT_TOKEN_ENV}
      - SERVER_PORT=8082
    networks:
      - wmantra-network

    entrypoint: [ "sh", "-c", "./starter.sh" ]
    depends_on:
      - db
# Uncomment to adjsut memory usage on machines with limited resources
#    deploy:
#      resources:
#        limits:
#          memory: 1800M

  templater:
    image: wmantra_templater:latest
    build:
      context: .
      dockerfile: templater/Dockerfile
    ports:
      - "8080:8080"
    environment:
      - LOGGING_FILE_RELATIVE_PATH=./logs/application.log
      - LOGGING_PATTERN_DATEFORMAT=yyyy-MM-dd HH:mm:ss.SSS O
      - MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_EXCLUDE=*
      - SERVER_PORT=8080
      - LOGGING_LEVEL_ROOT=INFO
      - API_KEY=${API_KEY_ENV}
      - API_URL=http://api.weatherapi.com/v1/forecast.json
    networks:
      - wmantra-network
# Uncomment to adjsut memory usage on machines with limited resources
#    deploy:
#      resources:
#        limits:
#          memory: 800M

    entrypoint: [ "sh", "-c", "./starter.sh" ]

  screenshotter:
    image: wmantra_screenshotter:latest
    build:
      context: .
      dockerfile: screenshotter/Dockerfile
    ports:
      - "8084:8084"
    networks:
      - wmantra-network

  db:
    image: postgres:alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
      - POSTGRES_USER=${DATABASE_USERNAME}
    networks:
      - wmantra-network

# Uncomment to adjsut memory usage on machines with limited resources
#    deploy:
#      resources:
#        limits:
#          memory: 500M

volumes:
  postgres_data:
    driver: local

networks:
  wmantra-network:
    driver: bridge
